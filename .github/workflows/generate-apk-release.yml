name: APK Build and Release Pipeline

env:
  main_project_module: app
  app_name: JTV-GO-Server

on:
  push:
    branches:
      - main
      - pre-release
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "**.md"
      
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set Repository Name As Env Variable
      - name: 📦 Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      # Set date today
      - name: 📅 Set var
        run: echo "date_today=$(date +%Y%m%d)" >> $GITHUB_ENV

      # Extract versionName from build.gradle
      - name: 🔍 Extract version name from build.gradle
        run: |
          version_name=$(grep "versionName" ${{ env.main_project_module }}/build.gradle | awk '{print $2}' | tr -d '"')
          echo "version_name=$version_name" >> $GITHUB_ENV

      # Detect branch type and set initial tag name
      - name: 🔍 Detect branch type and set initial tag
        run: |
          if [ "${{ github.ref_name }}" == "pre-release" ]; then
            echo "is_pre_release=true" >> $GITHUB_ENV
            echo "base_tag_name=pre${{ env.version_name }}" >> $GITHUB_ENV
          else
            echo "is_pre_release=false" >> $GITHUB_ENV
            echo "base_tag_name=v${{ env.version_name }}" >> $GITHUB_ENV
          fi
          echo "tag_name=${{ env.base_tag_name }}" >> $GITHUB_ENV

      # Check and increment tag if it already exists
      - name: 🔍 Check existing tags and increment if needed
        run: |
          # Set the base tag name
          base_tag_name="${{ env.base_tag_name }}"

          # Fetch all existing tags that match the base tag name with optional suffixes
          existing_tags=$(git ls-remote --tags origin | awk -F/ '{print $3}' | grep "^${base_tag_name}")

          # Initialize suffix and tag name
          suffix=0
          final_tag_name="$base_tag_name"

          # Check if any tags with the base name exist
          if echo "$existing_tags" | grep -q "^$base_tag_name$"; then
            # Find the largest existing suffix
            suffix=$(echo "$existing_tags" | grep -oE "${base_tag_name}-a[0-9]+" | sed -E "s/${base_tag_name}-a//" | sort -nr | head -1)
            suffix=$((suffix + 1))
            final_tag_name="${base_tag_name}-a${suffix}"
          fi

          # Export the final unique tag name
          echo "final_tag_name=$final_tag_name" >> $GITHUB_ENV

      - name: ☕ Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: 🔧 Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Build Project
      - name: 🏗️ Build gradle project
        run: ./gradlew build

      # Create APK Release
      - name: 📲 Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleRelease

      # Sign APK Release
      - name: ✍️ Sign app APK Release
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: ${{ env.main_project_module }}/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
        
      # Rename APK file
      - name: 📝 Rename APK
        run: mv ${{ env.main_project_module }}/build/outputs/apk/release/app-release-unsigned-signed.apk ${{ env.main_project_module }}/build/outputs/apk/release/${{ env.app_name }}-${{ env.final_tag_name }}.apk
      
      # GitHub release
      - name: 🚀 Upload APK to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ env.final_tag_name }}"
          name: "${{ env.final_tag_name }}"
          files: ${{ env.main_project_module }}/build/outputs/apk/release/${{ env.app_name }}-${{ env.final_tag_name }}.apk
          generate_release_notes: true
          draft: false
          prerelease: ${{ env.is_pre_release }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
